// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class CommentAdded extends ethereum.Event {
  get params(): CommentAdded__Params {
    return new CommentAdded__Params(this);
  }
}

export class CommentAdded__Params {
  _event: CommentAdded;

  constructor(event: CommentAdded) {
    this._event = event;
  }

  get postId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get commentId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get commenter(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get text(): string {
    return this._event.parameters[3].value.toString();
  }
}

export class PostCreated extends ethereum.Event {
  get params(): PostCreated__Params {
    return new PostCreated__Params(this);
  }
}

export class PostCreated__Params {
  _event: PostCreated;

  constructor(event: PostCreated) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get author(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get contentURI(): string {
    return this._event.parameters[2].value.toString();
  }
}

export class PostDisliked extends ethereum.Event {
  get params(): PostDisliked__Params {
    return new PostDisliked__Params(this);
  }
}

export class PostDisliked__Params {
  _event: PostDisliked;

  constructor(event: PostDisliked) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get disliker(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class PostLiked extends ethereum.Event {
  get params(): PostLiked__Params {
    return new PostLiked__Params(this);
  }
}

export class PostLiked__Params {
  _event: PostLiked;

  constructor(event: PostLiked) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get liker(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Graphite__postsResult {
  value0: BigInt;
  value1: Address;
  value2: string;
  value3: BigInt;
  value4: BigInt;
  value5: BigInt;

  constructor(
    value0: BigInt,
    value1: Address,
    value2: string,
    value3: BigInt,
    value4: BigInt,
    value5: BigInt,
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromString(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    return map;
  }

  getId(): BigInt {
    return this.value0;
  }

  getAuthor(): Address {
    return this.value1;
  }

  getContentURI(): string {
    return this.value2;
  }

  getLikeCount(): BigInt {
    return this.value3;
  }

  getDislikeCount(): BigInt {
    return this.value4;
  }

  getCommentCount(): BigInt {
    return this.value5;
  }
}

export class Graphite extends ethereum.SmartContract {
  static bind(address: Address): Graphite {
    return new Graphite("Graphite", address);
  }

  postCount(): BigInt {
    let result = super.call("postCount", "postCount():(uint256)", []);

    return result[0].toBigInt();
  }

  try_postCount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("postCount", "postCount():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  posts(param0: BigInt): Graphite__postsResult {
    let result = super.call(
      "posts",
      "posts(uint256):(uint256,address,string,uint256,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );

    return new Graphite__postsResult(
      result[0].toBigInt(),
      result[1].toAddress(),
      result[2].toString(),
      result[3].toBigInt(),
      result[4].toBigInt(),
      result[5].toBigInt(),
    );
  }

  try_posts(param0: BigInt): ethereum.CallResult<Graphite__postsResult> {
    let result = super.tryCall(
      "posts",
      "posts(uint256):(uint256,address,string,uint256,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Graphite__postsResult(
        value[0].toBigInt(),
        value[1].toAddress(),
        value[2].toString(),
        value[3].toBigInt(),
        value[4].toBigInt(),
        value[5].toBigInt(),
      ),
    );
  }
}

export class AddCommentCall extends ethereum.Call {
  get inputs(): AddCommentCall__Inputs {
    return new AddCommentCall__Inputs(this);
  }

  get outputs(): AddCommentCall__Outputs {
    return new AddCommentCall__Outputs(this);
  }
}

export class AddCommentCall__Inputs {
  _call: AddCommentCall;

  constructor(call: AddCommentCall) {
    this._call = call;
  }

  get postId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get text(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class AddCommentCall__Outputs {
  _call: AddCommentCall;

  constructor(call: AddCommentCall) {
    this._call = call;
  }
}

export class CreatePostCall extends ethereum.Call {
  get inputs(): CreatePostCall__Inputs {
    return new CreatePostCall__Inputs(this);
  }

  get outputs(): CreatePostCall__Outputs {
    return new CreatePostCall__Outputs(this);
  }
}

export class CreatePostCall__Inputs {
  _call: CreatePostCall;

  constructor(call: CreatePostCall) {
    this._call = call;
  }

  get contentURI(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class CreatePostCall__Outputs {
  _call: CreatePostCall;

  constructor(call: CreatePostCall) {
    this._call = call;
  }
}

export class DislikePostCall extends ethereum.Call {
  get inputs(): DislikePostCall__Inputs {
    return new DislikePostCall__Inputs(this);
  }

  get outputs(): DislikePostCall__Outputs {
    return new DislikePostCall__Outputs(this);
  }
}

export class DislikePostCall__Inputs {
  _call: DislikePostCall;

  constructor(call: DislikePostCall) {
    this._call = call;
  }

  get postId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class DislikePostCall__Outputs {
  _call: DislikePostCall;

  constructor(call: DislikePostCall) {
    this._call = call;
  }
}

export class LikePostCall extends ethereum.Call {
  get inputs(): LikePostCall__Inputs {
    return new LikePostCall__Inputs(this);
  }

  get outputs(): LikePostCall__Outputs {
    return new LikePostCall__Outputs(this);
  }
}

export class LikePostCall__Inputs {
  _call: LikePostCall;

  constructor(call: LikePostCall) {
    this._call = call;
  }

  get postId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class LikePostCall__Outputs {
  _call: LikePostCall;

  constructor(call: LikePostCall) {
    this._call = call;
  }
}
